#     location ~ \.(js|css)$ {
#             root /var/www/lali.print/public;
#      }
server{
    listen 80;
    server_name lali.print;
    return 301 https://$server_name$request_uri;
}


server {
    listen 443 ssl;
    index index.php;
    server_name lali.print;
    error_log /var/log/nginx/project_error.log;
    access_log /var/log/nginx/project_access.log;
    root /var/www/lali.print/public;

    ssl_protocols TLSv1.2;
    ssl_ciphers "HIGH:!RC4:!aNULL:!MD5:!K=kEDH";
    add_header Strict-Transport-Security ;max-age=604800';

    location /
     {
        try_files $uri $uri/  /index.php?$args;
     }

#    location / {
#        # try to serve file directly, fallback to index.php
#        try_files $uri /index.php$is_args$args;
#    }

    # optionally disable falling back to PHP script for the asset directories;
    # nginx will return a 404 error when files are not found instead of passing the
    # request to Symfony (improves performance but Symfony's 404 page is not displayed)
    # location /bundles {
    #     try_files $uri =404;
    # }

    location ~  \.php(/|$) {
        fastcgi_pass php:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        fastcgi_index index.php;
        include fastcgi_params;

        # optionally set the value of the environment variables used in the application
        # fastcgi_param APP_ENV prod;
        # fastcgi_param APP_SECRET <app-secret-id>;
        # fastcgi_param DATABASE_URL "mysql://db_user:db_pass@host:3306/db_name";

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        # Caveat: When PHP-FPM is hosted on a different machine from nginx
        #         $realpath_root may not resolve as you expect! In this case try using
        #         $document_root instead.
        #fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        #fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;


        #fastcgi_buffer_size 128k;
        #fastcgi_buffers 4 256;
        #fastcgi_busy_buffer_size 256;


        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        #internal;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }

}




#systemctl reload nginx
#открыть с правамиадминистратора файл
# C:\Windows\System32\drivers\etc\hosts   для windows
# sudo vi /etc/hosts    на маке
# https://eax.me/vim-commands/
# и добавить строку
#     127.0.0.1   lali.print
#
# curse of bootsrap https://www.youtube.com/watch?v=CvMxvb2D8Iw
#


